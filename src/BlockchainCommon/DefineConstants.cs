internal static class DefineConstants
{
	public const int CN_PAGE_SIZE = 2097152;
	public const int CN_SCRATCHPAD = 2097152;
	public const int CN_ITERATIONS = 1048576;
	public const int CN_LITE_PAGE_SIZE = 2097152;
	public const int CN_LITE_SCRATCHPAD = 1048576;
	public const int CN_LITE_ITERATIONS = 524288;
	public const int CN_SOFT_SHELL_MEMORY = 262144; // This defines the lowest memory utilization for our curve
	public const int CN_SOFT_SHELL_WINDOW = 2048; // This defines how many blocks we cycle through as part of our algo sine wave
	public const int CN_SOFT_SHELL_MULTIPLIER = 3; // This defines how big our steps are for each block and
	public const int CHACHA8_KEY_SIZE = 32;
	public const int CHACHA8_IV_SIZE = 8;
	public const int BC_COMMANDS_POOL_BASE = 2000;
	public const string CORE_RPC_STATUS_OK = "OK";
	public const string CORE_RPC_STATUS_BUSY = "BUSY";
	public const int BUFSIZE = 10000;
	public const int TABLE_ALIGN = 32;
	public const int WPOLY = 0x011b;
	public const int N_COLS = 4;
	public const int AES_BLOCK_SIZE = 16;
	public const int ROWS = 8;
	public const int COLS512 = 8;
	public const int ROUNDS512 = 10;
	public const int HASH_BIT_LEN = 256;
	public const int P_TYPE = 0;
	public const int Q_TYPE = 1;
	public const int KECCAK_ROUNDS = 24;
	public const int _SKEIN_H_ = 1;
	public const int IS_BIG_ENDIAN = 4321; // byte 0 is most significant (mc68k)
	public const int IS_LITTLE_ENDIAN = 1234; // byte 0 is least significant (i386)
//C++ TO C# CONVERTER TODO TASK: The following #define constant was defined in different ways:
	public const int PLATFORM_MUST_ALIGN = 1;
	public const int PLATFORM_MUST_ALIGN = 0;
//C++ TO C# CONVERTER TODO TASK: The following #define constant was defined in different ways:
	public const int SKEIN_NEED_SWAP = 1;
	public const int SKEIN_NEED_SWAP = 0;
	public const string OAES_VERSION = "0.8.1";
	public const int OAES_BLOCK_SIZE = 16;
	public const int OAES_OPTION_NONE = 0;
	public const int OAES_OPTION_ECB = 1;
	public const int OAES_OPTION_CBC = 2;
	public const int OAES_OPTION_STEP_ON = 4;
	public const int OAES_OPTION_STEP_OFF = 8;
	public const int RAND_F_RAND_GET_RAND_METHOD = 101;
	public const int RAND_F_RAND_INIT_FIPS = 102;
	public const int RAND_F_SSLEAY_RAND_BYTES = 100;
	public const int RAND_R_DUAL_EC_DRBG_DISABLED = 104;
	public const int RAND_R_ERROR_INITIALISING_DRBG = 102;
	public const int RAND_R_ERROR_INSTANTIATING_DRBG = 103;
	public const int RAND_R_NO_FIPS_RANDOM_METHOD_SET = 101;
	public const int RAND_R_PRNG_NOT_SEEDED = 100;
	public const int OAES_RKEY_LEN = 4;
	public const int OAES_COL_LEN = 4;
	public const int OAES_ROUND_BASE = 7;
	public const int OAES_FLAG_PAD = 0x01;
	public const int DISABLE_UNUSED = 0;
	public const int SKEIN_256_NIST_MAX_HASHBITS = 0;
	public const int SKEIN_512_NIST_MAX_HASHBITS = 512;
	public const int SKEIN_MODIFIER_WORDS =  2; // number of modifier (tweak) words
	public const int SKEIN_256_STATE_WORDS =  4;
	public const int SKEIN_512_STATE_WORDS =  8;
	public const int SKEIN1024_STATE_WORDS = 16;
	public const int SKEIN_MAX_STATE_WORDS = 16;
	public const int SKEIN_TREE_HASH = 1;
	public const int SKEIN_BLK_TYPE_KEY =  0; // key, for MAC and KDF
	public const int SKEIN_BLK_TYPE_CFG =  4; // configuration block
	public const int SKEIN_BLK_TYPE_PERS =  8; // personalization string
	public const int SKEIN_BLK_TYPE_PK = 12; // public key (for digital signature hashing)
	public const int SKEIN_BLK_TYPE_KDF = 16; // key identifier for KDF
	public const int SKEIN_BLK_TYPE_NONCE = 20; // nonce for PRNG
	public const int SKEIN_BLK_TYPE_MSG = 48; // message processing
	public const int SKEIN_BLK_TYPE_OUT = 63; // output stage
	public const int SKEIN_BLK_TYPE_MASK = 63; // bit field mask
	public const int SKEIN_VERSION = 1;
	public const int SKEIN_CFG_STR_LEN = 4 * 8;
	public const int SKEIN_CFG_TREE_LEAF_SIZE_POS =  0;
	public const int SKEIN_CFG_TREE_NODE_SIZE_POS =  8;
	public const int SKEIN_CFG_TREE_MAX_LEVEL_POS = 16;
	public const int SKEIN_256_ROUNDS_TOTAL = 72; // number of rounds for the different block sizes
	public const int SKEIN_512_ROUNDS_TOTAL = 72;
	public const int SKEIN1024_ROUNDS_TOTAL = 80;
	public const int SKEIN_USE_ASM = 0; // default is all C code (no ASM)
	public const int SKEIN_LOOP = 0x1; // default: unroll 256 and 512, but not 1024
	public const int KW_TWK_BASE = 0;
	public const int KW_KEY_BASE = 3;
	public const int SKEIN_UNROLL_256 = 0;
	public const int SKEIN_UNROLL_512 = 0;
	public const int SKEIN_UNROLL_1024 = 0;
	public const int AES_KEY_SIZE = 32;
	public const int INIT_SIZE_BLK = 8;
	public const int TX_EXTRA_PADDING_MAX_COUNT = 255;
	public const int TX_EXTRA_NONCE_MAX_COUNT = 255;
	public const int TX_EXTRA_TAG_PADDING = 0x00;
	public const int TX_EXTRA_TAG_PUBKEY = 0x01;
	public const int TX_EXTRA_NONCE = 0x02;
	public const int TX_EXTRA_MERGE_MINING_TAG = 0x03;
	public const int TX_EXTRA_NONCE_PAYMENT_ID = 0x00;
	public const int ROCKSDB_MAJOR = 4;
	public const int ROCKSDB_MINOR = 11;
	public const int ROCKSDB_PATCH = 2;
	public const int P2P_COMMANDS_POOL_BASE = 1000;
	public const int PERFORMANCE_ITERATIONS = 1000;
	public const int CORE_RPC_ERROR_CODE_WRONG_PARAM = -1;
	public const int CORE_RPC_ERROR_CODE_TOO_BIG_HEIGHT = -2;
	public const int CORE_RPC_ERROR_CODE_TOO_BIG_RESERVE_SIZE = -3;
	public const int CORE_RPC_ERROR_CODE_WRONG_WALLET_ADDRESS = -4;
	public const int CORE_RPC_ERROR_CODE_INTERNAL_ERROR = -5;
	public const int CORE_RPC_ERROR_CODE_WRONG_BLOCKBLOB = -6;
	public const int CORE_RPC_ERROR_CODE_BLOCK_NOT_ACCEPTED = -7;
	public const int CORE_RPC_ERROR_CODE_CORE_BUSY = -9;
	public const int MAX_STRING_LEN_POSSIBLE = 2000000000; //do not let string be so big
	public const string SERVICE_NAME = "Turtle-Service";
	public const int STDOUT_FILENO = 1;
	public const char FIRST_G1 = '_';
	public const char LAST_G1 = '~';
	public const int FOREGROUND_BLACK = 0;
	public const int BACKGROUND_BLACK = 0;
	public const int BUFFER_SIZE = 2048;
	public const int LINENOISE_DEFAULT_HISTORY_MAX_LEN = 100;
	public const int LINENOISE_MAX_LINE = 4096;
	public const int LINENOISE_HISTORY_NEXT = 0;
	public const int LINENOISE_HISTORY_PREV = 1;
	public const int LITTLE_ENDIAN = 1234;
	public const int BIG_ENDIAN = 4321;
	public const int PDP_ENDIAN = 3412;
	public const int true = 1;
	public const int false = 0;
}